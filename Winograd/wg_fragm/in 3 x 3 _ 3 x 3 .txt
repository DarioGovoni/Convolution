/*fixed d[5][5] = {
		{d(0,0),d(0,1),d(0,2),d(0,3),d(0,4)},
		{d(1,0),d(1,1),d(1,2),d(1,3),d(1,4)},
		{d(2,0),d(2,1),d(2,2),d(2,3),d(2,4)},
		{d(3,0),d(3,1),d(3,2),d(3,3),d(3,4)},
		{d(4,0),d(4,1),d(4,2),d(4,3),d(4,4)}
};*/
fixed mid[5][5];
register int i;

FOR(i,5) {
	fixed dc[5] = {d(0,i),d(1,i),d(2,i),d(3,i),d(4,i)};
	mid[0][i] = 2*(dc[0]-dc[2])+dc[3]-dc[1];
	mid[1][i] = dc[3]-dc[2]-2*dc[1];
	mid[2][i] = dc[3]+2*dc[1]-3*dc[2];
	mid[3][i] = dc[3]-dc[1];
	mid[4][i] = 2*(dc[1]-dc[3])+dc[4]-dc[2];
}
FOR(i,5) {
	v(i,0) = 2*(mid[i][0]-mid[i][2])+mid[i][3]-mid[i][1];
	v(i,1) = mid[i][3]-mid[i][2]-2*mid[i][1];
	v(i,2) = mid[i][3]+2*mid[i][1]-3*mid[i][2];
	v(i,3) = mid[i][3]-mid[i][1];
	v(i,4) = 2*(mid[i][1]-mid[i][3])+mid[i][4]-mid[i][2];
}